{"ast":null,"code":"var _jsxFileName = \"F:\\\\MiniProject\\\\New folder\\\\paymentor\\\\src\\\\Components\\\\update.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../backend/firebase';\nimport { collection, addDoc, getDocs } from \"firebase/firestore\";\nimport firebase from '../backend/firebase'; // // const Update = () => {\n// //     const userCollectionRef = collection(db ,\"User\");\n// //     const [users, setUsers] = useState([]);\n// //     const [filterUser, setfilterUser] = useState([]);\n// //     useEffect(() => {\n// //         const getUsers = async () => {\n// //             const data = await getDocs(userCollectionRef)\n// //             setUsers(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\n// //         }\n// //         getUsers()\n// //     }, [])\n// function Update(){\n//     const [newName, setnewName] = useState();\n//     const [newUsername, setnewUsername] = useState();\n//     const [newPass, setnewPass] = useState();\n//     const [newClass, setnewClass] = useState();\n//     const [newDept, setnewDept] = useState();\n//     const [newCategory, setnewCategory] = useState();\n//     const display = async (val) => {\n//         users.filter((val) => {\n//             if(val == \"\") {\n//                 alert(\"Enter Correct Value\")\n//             } else if(val.toLowecase() == users.map((user) => {user.username})) {\n//                 setfilterUser(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\n//             }\n//         })\n// }\n//     return (\n//         <>\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Update = () => {\n  _s();\n\n  const userCollectionRef = collection(db, \"User\");\n  const [users, setUsers] = useState([]);\n  const [filterUser, setfilterUser] = useState([]); // useEffect(() => {\n  //     const getUsers = async () => {\n  //         const data = await getDocs(userCollectionRef)\n  //         setUsers(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\n  //     }\n  //     getUsers()\n  // }, [])\n\n  const [newName, setnewName] = React.useState(\"\");\n  const [newUsername, setnewUsername] = React.useState(\"\");\n  const [newPass, setnewPass] = React.useState(\"\");\n  const [newClass, setnewClass] = React.useState(\"\");\n  const [newDept, setnewDept] = React.useState(\"\");\n  const [newCategory, setnewCategory] = React.useState(\"\");\n  const [newFee, setnewFee] = React.useState(\"\");\n\n  const updateUser = () => {\n    const db = firebase.firestore();\n    db.collection(\"User\").doc(newUsername).set({\n      URN: newUsername,\n      Password: newPass,\n      Name: newName,\n      Class: newClass,\n      department: newDept,\n      Category: newCategory,\n      Fee: newFee\n    }).then(function () {\n      alert(\"Data Saved...!\");\n    }).catch(function (error) {\n      console.error(\"Error writing Value: \", error);\n    });\n  }; // const display = async (val) => {\n  //         users.filter((val) => {\n  //             if(val == \"\") {\n  //                 alert(\"Enter Correct Value\")\n  //             } else if(val.toLowecase() == users.map((user) => {user.username})) {\n  //                 setfilterUser(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\n  //             }\n  //         })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid d-flex justify-content-evenly align-items-center \",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/img/updatelogo.svg\",\n        alt: \"Update logo img\",\n        className: \"w-50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" d-flex flex-column justify-content-center align-items-center\",\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Update, \"SzMzTeM/bjIjgEG6YFyjc4PABWc=\");\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["F:/MiniProject/New folder/paymentor/src/Components/update.js"],"names":["React","useState","useEffect","db","collection","addDoc","getDocs","firebase","Update","userCollectionRef","users","setUsers","filterUser","setfilterUser","newName","setnewName","newUsername","setnewUsername","newPass","setnewPass","newClass","setnewClass","newDept","setnewDept","newCategory","setnewCategory","newFee","setnewFee","updateUser","firestore","doc","set","URN","Password","Name","Class","department","Category","Fee","then","alert","catch","error","console"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,qBAAnB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA8BC,OAA9B,QAA6C,oBAA7C;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CAEA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAMC,iBAAiB,GAAGL,UAAU,CAACD,EAAD,EAAK,MAAL,CAApC;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C,CALiB,CAOjB;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBf,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgCjB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBnB,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BrB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBvB,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACuB,WAAD,EAAcC,cAAd,IAAgCzB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACyB,MAAD,EAASC,SAAT,IAAsB3B,KAAK,CAACC,QAAN,CAAe,EAAf,CAA5B;;AAEA,QAAM2B,UAAU,GAAG,MAAK;AACpB,UAAMzB,EAAE,GAAGI,QAAQ,CAACsB,SAAT,EAAX;AACA1B,IAAAA,EAAE,CAACC,UAAH,CAAc,MAAd,EACK0B,GADL,CACSd,WADT,EAEKe,GAFL,CAES;AACDC,MAAAA,GAAG,EAAChB,WADH;AAEDiB,MAAAA,QAAQ,EAACf,OAFR;AAGDgB,MAAAA,IAAI,EAACpB,OAHJ;AAIDqB,MAAAA,KAAK,EAACf,QAJL;AAKDgB,MAAAA,UAAU,EAACd,OALV;AAMDe,MAAAA,QAAQ,EAACb,WANR;AAODc,MAAAA,GAAG,EAACZ;AAPH,KAFT,EAWKa,IAXL,CAWU,YAAU;AACZC,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACH,KAbL,EAcKC,KAdL,CAcW,UAAUC,KAAV,EAAiB;AACpBC,MAAAA,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD,KAhBP;AAiBH,GAnBD,CAzBiB,CA8CjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAA,2BAEI;AAAK,MAAA,SAAS,EAAC,mEAAf;AAAA,8BAEI;AAAK,QAAA,GAAG,EAAC,qBAAT;AAA+B,QAAA,GAAG,EAAC,iBAAnC;AAAqD,QAAA,SAAS,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,+DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AAaH,CArED;;GAAMlC,M;;KAAAA,M;AAuEL,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { db } from '../backend/firebase'\r\nimport { collection, addDoc , getDocs } from \"firebase/firestore\"\r\nimport firebase from '../backend/firebase'\r\n\r\n// // const Update = () => {\r\n\r\n// //     const userCollectionRef = collection(db ,\"User\");\r\n\r\n// //     const [users, setUsers] = useState([]);\r\n// //     const [filterUser, setfilterUser] = useState([]);\r\n\r\n// //     useEffect(() => {\r\n        \r\n// //         const getUsers = async () => {\r\n// //             const data = await getDocs(userCollectionRef)\r\n// //             setUsers(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\r\n// //         }\r\n\r\n// //         getUsers()\r\n// //     }, [])\r\n\r\n\r\n\r\n    \r\n// function Update(){\r\n//     const [newName, setnewName] = useState();\r\n//     const [newUsername, setnewUsername] = useState();\r\n//     const [newPass, setnewPass] = useState();\r\n//     const [newClass, setnewClass] = useState();\r\n//     const [newDept, setnewDept] = useState();\r\n//     const [newCategory, setnewCategory] = useState();\r\n\r\n//     const display = async (val) => {\r\n//         users.filter((val) => {\r\n//             if(val == \"\") {\r\n//                 alert(\"Enter Correct Value\")\r\n//             } else if(val.toLowecase() == users.map((user) => {user.username})) {\r\n//                 setfilterUser(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\r\n//             }\r\n//         })\r\n// }\r\n    \r\n//     return (\r\n//         <>\r\n\r\nconst Update = () => {\r\n\r\n    const userCollectionRef = collection(db ,\"User\");\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [filterUser, setfilterUser] = useState([]);\r\n\r\n    // useEffect(() => {\r\n        \r\n    //     const getUsers = async () => {\r\n    //         const data = await getDocs(userCollectionRef)\r\n    //         setUsers(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\r\n    //     }\r\n\r\n    //     getUsers()\r\n    // }, [])\r\n\r\n    const [newName, setnewName] = React.useState(\"\");\r\n    const [newUsername, setnewUsername] = React.useState(\"\");\r\n    const [newPass, setnewPass] = React.useState(\"\");\r\n    const [newClass, setnewClass] = React.useState(\"\");\r\n    const [newDept, setnewDept] = React.useState(\"\");\r\n    const [newCategory, setnewCategory] = React.useState(\"\");\r\n    const [newFee, setnewFee] = React.useState(\"\");\r\n\r\n    const updateUser = () =>{\r\n        const db = firebase.firestore();\r\n        db.collection(\"User\")\r\n            .doc(newUsername)\r\n            .set({\r\n                URN:newUsername,\r\n                Password:newPass,\r\n                Name:newName,\r\n                Class:newClass,\r\n                department:newDept,\r\n                Category:newCategory,\r\n                Fee:newFee\r\n            })\r\n            .then(function(){\r\n                alert(\"Data Saved...!\")\r\n            })\r\n            .catch(function (error) {\r\n                console.error(\"Error writing Value: \", error);\r\n              });\r\n    }\r\n\r\n    // const display = async (val) => {\r\n    //         users.filter((val) => {\r\n    //             if(val == \"\") {\r\n    //                 alert(\"Enter Correct Value\")\r\n    //             } else if(val.toLowecase() == users.map((user) => {user.username})) {\r\n    //                 setfilterUser(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\r\n    //             }\r\n    //         })\r\n    // }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"container-fluid d-flex justify-content-evenly align-items-center \">\r\n                \r\n                <img src=\"/img/updatelogo.svg\" alt=\"Update logo img\" className=\"w-50\" />\r\n                <div className=\" d-flex flex-column justify-content-center align-items-center\">\r\n                                .\r\n                    \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n export default Update;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"F:\\\\MiniProject\\\\New folder\\\\paymentor\\\\src\\\\Components\\\\update.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../backend/firebase';\nimport { collection, addDoc, getDocs } from \"firebase/firestore\";\nimport firebase from '../backend/firebase'; // // const Update = () => {\n// //     const userCollectionRef = collection(db ,\"User\");\n// //     const [users, setUsers] = useState([]);\n// //     const [filterUser, setfilterUser] = useState([]);\n// //     useEffect(() => {\n// //         const getUsers = async () => {\n// //             const data = await getDocs(userCollectionRef)\n// //             setUsers(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\n// //         }\n// //         getUsers()\n// //     }, [])\n// function Update(){\n//     const [newName, setnewName] = useState();\n//     const [newUsername, setnewUsername] = useState();\n//     const [newPass, setnewPass] = useState();\n//     const [newClass, setnewClass] = useState();\n//     const [newDept, setnewDept] = useState();\n//     const [newCategory, setnewCategory] = useState();\n//     const display = async (val) => {\n//         users.filter((val) => {\n//             if(val == \"\") {\n//                 alert(\"Enter Correct Value\")\n//             } else if(val.toLowecase() == users.map((user) => {user.username})) {\n//                 setfilterUser(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\n//             }\n//         })\n// }\n//     return (\n//         <>\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Update = () => {\n  _s();\n\n  const userCollectionRef = collection(db, \"User\");\n  const [users, setUsers] = useState([]);\n  const [filterUser, setfilterUser] = useState([]); // useEffect(() => {\n  //     const getUsers = async () => {\n  //         const data = await getDocs(userCollectionRef)\n  //         setUsers(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\n  //     }\n  //     getUsers()\n  // }, [])\n\n  const [newName, setnewName] = React.useState(\"\");\n  const [newUsername, setnewUsername] = React.useState(\"\");\n  const [newPass, setnewPass] = React.useState(\"\");\n  const [newClass, setnewClass] = React.useState(\"\");\n  const [newDept, setnewDept] = React.useState(\"\");\n  const [newCategory, setnewCategory] = React.useState(\"\");\n  const [newFee, setnewFee] = React.useState(\"\");\n\n  const updateUser = () => {\n    const db = firebase.firestore();\n    db.collection(\"User\").doc(newUsername).set({\n      URN: newUsername,\n      Password: newPass,\n      Name: newName,\n      Class: newClass,\n      department: newDept,\n      Category: newCategory,\n      Fee: newFee\n    }).then(function () {\n      alert(\"Data Saved...!\");\n    }).catch(function (error) {\n      console.error(\"Error writing Value: \", error);\n    });\n  }; // const display = async (val) => {\n  //         users.filter((val) => {\n  //             if(val == \"\") {\n  //                 alert(\"Enter Correct Value\")\n  //             } else if(val.toLowecase() == users.map((user) => {user.username})) {\n  //                 setfilterUser(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\n  //             }\n  //         })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid d-flex justify-content-center align-items-center \",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/img/updatelogo.svg\",\n        alt: \"Update logo img\",\n        className: \"w-50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" d-flex flex-column justify-content-center align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"me-2\",\n            for: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            id: \"username\",\n            onChange: e => {\n              setnewUsername(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"password\",\n                id: \"password\",\n                onChange: e => {\n                  setnewPass(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"div\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                id: \"name\",\n                onChange: e => {\n                  setnewName(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"div\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"class\",\n                children: \"Class\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"class\",\n                id: \"class\",\n                onChange: e => {\n                  setnewClass(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"div\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"department\",\n                children: \"Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"department\",\n                id: \"department\",\n                onChange: e => {\n                  setnewDept(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"div\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"category\",\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"px-5 py-1\",\n                type: \"text\",\n                id: \"category\",\n                name: \"category\",\n                onChange: e => {\n                  setnewCategory(e.target.value);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  type: \"text\",\n                  name: \"category\",\n                  value: \"open\",\n                  children: \"Open\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  type: \"text\",\n                  name: \"category\",\n                  value: \"obc\",\n                  children: \"OBC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  type: \"text\",\n                  name: \"category\",\n                  value: \"nt\",\n                  children: \"NT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  type: \"text\",\n                  name: \"category\",\n                  value: \"sc\",\n                  children: \"SC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  type: \"text\",\n                  name: \"category\",\n                  value: \"tfws\",\n                  children: \"TFWS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"div\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"Fee\",\n                children: \"Fee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"fee\",\n                id: \"fee\",\n                onChange: e => {\n                  setnewFee(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"div\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"btn btn-primary \",\n                type: \"submit\",\n                name: \"submit\",\n                value: \"Update\",\n                onClick: () => {\n                  updateUser();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Update, \"SzMzTeM/bjIjgEG6YFyjc4PABWc=\");\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["F:/MiniProject/New folder/paymentor/src/Components/update.js"],"names":["React","useState","useEffect","db","collection","addDoc","getDocs","firebase","Update","userCollectionRef","users","setUsers","filterUser","setfilterUser","newName","setnewName","newUsername","setnewUsername","newPass","setnewPass","newClass","setnewClass","newDept","setnewDept","newCategory","setnewCategory","newFee","setnewFee","updateUser","firestore","doc","set","URN","Password","Name","Class","department","Category","Fee","then","alert","catch","error","console","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,qBAAnB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA8BC,OAA9B,QAA6C,oBAA7C;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CAEA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAMC,iBAAiB,GAAGL,UAAU,CAACD,EAAD,EAAK,MAAL,CAApC;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C,CALiB,CAOjB;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBf,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgCjB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBnB,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BrB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBvB,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACuB,WAAD,EAAcC,cAAd,IAAgCzB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACyB,MAAD,EAASC,SAAT,IAAsB3B,KAAK,CAACC,QAAN,CAAe,EAAf,CAA5B;;AAEA,QAAM2B,UAAU,GAAG,MAAK;AACpB,UAAMzB,EAAE,GAAGI,QAAQ,CAACsB,SAAT,EAAX;AACA1B,IAAAA,EAAE,CAACC,UAAH,CAAc,MAAd,EACK0B,GADL,CACSd,WADT,EAEKe,GAFL,CAES;AACDC,MAAAA,GAAG,EAAChB,WADH;AAEDiB,MAAAA,QAAQ,EAACf,OAFR;AAGDgB,MAAAA,IAAI,EAACpB,OAHJ;AAIDqB,MAAAA,KAAK,EAACf,QAJL;AAKDgB,MAAAA,UAAU,EAACd,OALV;AAMDe,MAAAA,QAAQ,EAACb,WANR;AAODc,MAAAA,GAAG,EAACZ;AAPH,KAFT,EAWKa,IAXL,CAWU,YAAU;AACZC,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACH,KAbL,EAcKC,KAdL,CAcW,UAAUC,KAAV,EAAiB;AACpBC,MAAAA,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD,KAhBP;AAiBH,GAnBD,CAzBiB,CA8CjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAA,2BAEI;AAAK,MAAA,SAAS,EAAC,mEAAf;AAAA,8BAEI;AAAK,QAAA,GAAG,EAAC,qBAAT;AAA+B,QAAA,GAAG,EAAC,iBAAnC;AAAqD,QAAA,SAAS,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,+DAAf;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACA;AAAO,YAAA,SAAS,EAAC,MAAjB;AAAwB,YAAA,GAAG,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,UAAxB;AAAmC,YAAA,EAAE,EAAC,UAAtC;AACI,YAAA,QAAQ,EAAGE,CAAD,IAAO;AACb3B,cAAAA,cAAc,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH;AAHL;AAAA;AAAA;AAAA;AAAA,kBAFA,eAmBI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACI;AAAA,qCAAG;AAAO,gBAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,qCAAG;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,IAAI,EAAC,UAAxB;AAAmC,gBAAA,EAAE,EAAC,UAAtC;AACH,gBAAA,QAAQ,EAAGF,CAAD,IAAO;AACbzB,kBAAAA,UAAU,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH;AAHE;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBJ,eA0BI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACI;AAAA,qCAAG;AAAO,gBAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,qCAAG;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,IAAI,EAAC,MAAxB;AAA+B,gBAAA,EAAE,EAAC,MAAlC;AACC,gBAAA,QAAQ,EAAGF,CAAD,IAAO;AACb7B,kBAAAA,UAAU,CAAC6B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH;AAHF;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1BJ,eAiCI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACI;AAAA,qCAAG;AAAO,gBAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,qCAAG;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,IAAI,EAAC,OAAxB;AAAgC,gBAAA,EAAE,EAAC,OAAnC;AACH,gBAAA,QAAQ,EAAGF,CAAD,IAAO;AACbvB,kBAAAA,WAAW,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH;AAHE;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjCJ,eAwCI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACI;AAAA,qCAAG;AAAO,gBAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,qCAAG;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,IAAI,EAAC,YAAxB;AAAqC,gBAAA,EAAE,EAAC,YAAxC;AACH,gBAAA,QAAQ,EAAGF,CAAD,IAAO;AACbrB,kBAAAA,UAAU,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH;AAHE;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxCJ,eA+CI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACI;AAAA,qCAAG;AAAO,gBAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBADJ,eAGI;AAAA,qCAAG;AAAQ,gBAAA,SAAS,EAAC,WAAlB;AAA8B,gBAAA,IAAI,EAAC,MAAnC;AAA0C,gBAAA,EAAE,EAAC,UAA7C;AAAwD,gBAAA,IAAI,EAAC,UAA7D;AACH,gBAAA,QAAQ,EAAGF,CAAD,IAAO;AACbnB,kBAAAA,cAAc,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,iBAHE;AAAA,wCAKC;AAAQ,kBAAA,IAAI,EAAC,MAAb;AAAoB,kBAAA,IAAI,EAAC,UAAzB;AAAoC,kBAAA,KAAK,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALD,eAMC;AAAQ,kBAAA,IAAI,EAAC,MAAb;AAAoB,kBAAA,IAAI,EAAC,UAAzB;AAAoC,kBAAA,KAAK,EAAC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAND,eAOC;AAAQ,kBAAA,IAAI,EAAC,MAAb;AAAoB,kBAAA,IAAI,EAAC,UAAzB;AAAoC,kBAAA,KAAK,EAAC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPD,eAQC;AAAQ,kBAAA,IAAI,EAAC,MAAb;AAAoB,kBAAA,IAAI,EAAC,UAAzB;AAAoC,kBAAA,KAAK,EAAC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARD,eASC;AAAQ,kBAAA,IAAI,EAAC,MAAb;AAAoB,kBAAA,IAAI,EAAC,UAAzB;AAAoC,kBAAA,KAAK,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/CJ,eA8DI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACI;AAAA,qCAAG;AAAO,gBAAA,GAAG,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,qCAAG;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,IAAI,EAAC,KAAxB;AAA8B,gBAAA,EAAE,EAAC,KAAjC;AACH,gBAAA,QAAQ,EAAGF,CAAD,IAAO;AACbjB,kBAAAA,SAAS,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACH;AAHE;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9DJ,eAqEI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI;AAAA,qCAAG;AAAO,gBAAA,SAAS,EAAC,kBAAjB;AAAoC,gBAAA,IAAI,EAAC,QAAzC;AAAkD,gBAAA,IAAI,EAAC,QAAvD;AAAgE,gBAAA,KAAK,EAAC,QAAtE;AACD,gBAAA,OAAO,EAAE,MAAM;AAAClB,kBAAAA,UAAU;AAAG;AAD5B;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBArEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AAsFH,CA9ID;;GAAMpB,M;;KAAAA,M;AAgJL,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { db } from '../backend/firebase'\r\nimport { collection, addDoc , getDocs } from \"firebase/firestore\"\r\nimport firebase from '../backend/firebase'\r\n\r\n// // const Update = () => {\r\n\r\n// //     const userCollectionRef = collection(db ,\"User\");\r\n\r\n// //     const [users, setUsers] = useState([]);\r\n// //     const [filterUser, setfilterUser] = useState([]);\r\n\r\n// //     useEffect(() => {\r\n        \r\n// //         const getUsers = async () => {\r\n// //             const data = await getDocs(userCollectionRef)\r\n// //             setUsers(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\r\n// //         }\r\n\r\n// //         getUsers()\r\n// //     }, [])\r\n\r\n\r\n\r\n    \r\n// function Update(){\r\n//     const [newName, setnewName] = useState();\r\n//     const [newUsername, setnewUsername] = useState();\r\n//     const [newPass, setnewPass] = useState();\r\n//     const [newClass, setnewClass] = useState();\r\n//     const [newDept, setnewDept] = useState();\r\n//     const [newCategory, setnewCategory] = useState();\r\n\r\n//     const display = async (val) => {\r\n//         users.filter((val) => {\r\n//             if(val == \"\") {\r\n//                 alert(\"Enter Correct Value\")\r\n//             } else if(val.toLowecase() == users.map((user) => {user.username})) {\r\n//                 setfilterUser(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\r\n//             }\r\n//         })\r\n// }\r\n    \r\n//     return (\r\n//         <>\r\n\r\nconst Update = () => {\r\n\r\n    const userCollectionRef = collection(db ,\"User\");\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [filterUser, setfilterUser] = useState([]);\r\n\r\n    // useEffect(() => {\r\n        \r\n    //     const getUsers = async () => {\r\n    //         const data = await getDocs(userCollectionRef)\r\n    //         setUsers(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\r\n    //     }\r\n\r\n    //     getUsers()\r\n    // }, [])\r\n\r\n    const [newName, setnewName] = React.useState(\"\");\r\n    const [newUsername, setnewUsername] = React.useState(\"\");\r\n    const [newPass, setnewPass] = React.useState(\"\");\r\n    const [newClass, setnewClass] = React.useState(\"\");\r\n    const [newDept, setnewDept] = React.useState(\"\");\r\n    const [newCategory, setnewCategory] = React.useState(\"\");\r\n    const [newFee, setnewFee] = React.useState(\"\");\r\n\r\n    const updateUser = () =>{\r\n        const db = firebase.firestore();\r\n        db.collection(\"User\")\r\n            .doc(newUsername)\r\n            .set({\r\n                URN:newUsername,\r\n                Password:newPass,\r\n                Name:newName,\r\n                Class:newClass,\r\n                department:newDept,\r\n                Category:newCategory,\r\n                Fee:newFee\r\n            })\r\n            .then(function(){\r\n                alert(\"Data Saved...!\")\r\n            })\r\n            .catch(function (error) {\r\n                console.error(\"Error writing Value: \", error);\r\n              });\r\n    }\r\n\r\n    // const display = async (val) => {\r\n    //         users.filter((val) => {\r\n    //             if(val == \"\") {\r\n    //                 alert(\"Enter Correct Value\")\r\n    //             } else if(val.toLowecase() == users.map((user) => {user.username})) {\r\n    //                 setfilterUser(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\r\n    //             }\r\n    //         })\r\n    // }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"container-fluid d-flex justify-content-center align-items-center \">\r\n                \r\n                <img src=\"/img/updatelogo.svg\" alt=\"Update logo img\" className=\"w-50\" />\r\n                <div className=\" d-flex flex-column justify-content-center align-items-center\">\r\n                <div className=\"div\">\r\n                <label className=\"me-2\" for=\"username\">Username</label>\r\n                <input type=\"text\" name=\"username\" id=\"username\" \r\n                    onChange={(e) => {\r\n                        setnewUsername(e.target.value);\r\n                    }}/>\r\n\r\n                        {/* <input className=\"btn btn-primary ms-3\" type=\"submit\" name=\"submit\" value=\"Submit\" \r\n                          onClick={() => {display(newUsername)}}\r\n                        /> */}\r\n                \r\n                    {/* <div className=\"div\">\r\n                        <p><label for=\"username\">Username</label></p>\r\n                        <p><input type=\"text\" name=\"username\" id=\"username\" \r\n                            onChange={(e) => {\r\n                                setnewUsername(e.target.value);\r\n                            }}/></p>\r\n                    </div> */}\r\n                   \r\n                    <div className=\"mt-5\">\r\n                        <p><label for=\"password\">Password</label></p>\r\n                        <p><input type=\"text\" name=\"password\" id=\"password\" \r\n                        onChange={(e) => {\r\n                            setnewPass(e.target.value);\r\n                        }}/></p>\r\n                    </div>\r\n                    <div className=\"div\">\r\n                        <p><label for=\"name\">Name</label></p>\r\n                        <p><input type=\"text\" name=\"name\" id=\"name\" \r\n                            onChange={(e) => {\r\n                                setnewName(e.target.value);\r\n                            }}/></p>\r\n                    </div>\r\n                    <div className=\"div\">\r\n                        <p><label for=\"class\">Class</label></p>\r\n                        <p><input type=\"text\" name=\"class\" id=\"class\" \r\n                        onChange={(e) => {\r\n                            setnewClass(e.target.value);\r\n                        }}/></p>\r\n                    </div>\r\n                    <div className=\"div\">\r\n                        <p><label for=\"department\">Department</label></p>\r\n                        <p><input type=\"text\" name=\"department\" id=\"department\"\r\n                        onChange={(e) => {\r\n                            setnewDept(e.target.value);\r\n                        }}/></p>\r\n                    </div>\r\n                    <div className=\"div\">\r\n                        <p><label for=\"category\">Category</label></p>\r\n                        {/* <p><input type=\"text\" name=\"category\" id=\"category\" /></p> */}\r\n                        <p><select className=\"px-5 py-1\" type=\"text\" id=\"category\" name=\"category\" \r\n                        onChange={(e) => {\r\n                            setnewCategory(e.target.value);\r\n                        }} \r\n                        >\r\n                            <option type=\"text\" name=\"category\" value=\"open\">Open</option>\r\n                            <option type=\"text\" name=\"category\" value=\"obc\">OBC</option>\r\n                            <option type=\"text\" name=\"category\" value=\"nt\">NT</option>\r\n                            <option type=\"text\" name=\"category\" value=\"sc\">SC</option>\r\n                            <option type=\"text\" name=\"category\" value=\"tfws\">TFWS</option>\r\n                            </select></p>\r\n                    </div>\r\n                    <div className=\"div\">\r\n                        <p><label for=\"Fee\">Fee</label></p>\r\n                        <p><input type=\"text\" name=\"fee\" id=\"fee\"\r\n                        onChange={(e) => {\r\n                            setnewFee(e.target.value);\r\n                        }}/></p>\r\n                    </div>\r\n                    <div className=\"div\">\r\n                        <p><input className=\"btn btn-primary \" type=\"submit\" name=\"submit\" value=\"Update\" \r\n                          onClick={() => {updateUser()}}\r\n                         /></p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n export default Update;\r\n"]},"metadata":{},"sourceType":"module"}
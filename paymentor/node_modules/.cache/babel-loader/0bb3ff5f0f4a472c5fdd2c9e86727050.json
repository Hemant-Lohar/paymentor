{"ast":null,"code":"var _jsxFileName = \"F:\\\\MiniProject\\\\New folder\\\\paymentor\\\\src\\\\Components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport '../index.css';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport firebase from \"../backend/firebase\"; // import {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\n// import { useForm } from \"react-hook-form\";\n// import { yupResolver } from \"@hookform/resolvers/yup\";\n// import * as yup from \"yup\";\n// const schema = yup.object().shape({\n//     username: yup.string().required(),\n//     password: yup.string().min(4).max(8).required()\n// })\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const {\n    login\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const [newUsername, setnewUsername] = useState(\"\");\n  const [newPassword, setnewPassword] = useState(\"\");\n  const [info, setinfo] = useState([]); // \n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/userdashboard\");\n    } catch {\n      setError(\"Failed to log in\"); // alert(\"Enter Valid Username & Password !\")\n    }\n\n    setLoading(false);\n  } //     const userRef = useRef()\n  //     const passwordRef = useRef()\n  //     // const { login } = useAuth()\n  //     const [error, setError] = useState(\"\")\n  //     const [loading, setLoading] = useState(false)\n  //     const history = useHistory()\n  //     const [users, setUsers] = useState([]);\n  //     const userCollectionRef = collection(db ,\"User\");\n  //     const [currentUsername, setcurrentUsername] = useState()\n  //     const [currentUserpass, setcurrentUserpass] = useState()\n  //     const [inputUsername, setinputUsername] = useState()\n  //     const [inputUserpass, setinputUserpass] = useState()\n  //     useEffect(() => {\n  //     const getUsers = async () => {\n  //         const data = await getDocs(userCollectionRef)\n  //         setUsers(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\n  //         }\n  //         getUsers()\n  //     }, [])\n  //     // emailRef.current.value, passwordRef.current.value\n  //     const loginuser = () => {\n  //         setcurrentUsername( users.find((user) => {\n  //             return ( user.username  === inputUsername) \n  //         }))\n  //         setcurrentUserpass( users.find((user) => {\n  //             return (user.password === inputUserpass) \n  //         })\n  //         )\n  //         try {if (currentUsername.username == inputUsername) {\n  //             history.push(\"/userdashboard\")\n  //         } else {\n  //             alert(\"Input Correct Details\")\n  //         }} catch(err) {\n  //             console.log(err);\n  //         }\n  //         console.log(currentUsername);\n  //         console.log(inputUsername);\n  //     }\n  //     // async function handleSubmit(e) {\n  //     //     e.preventDefault()\n  //     //     try {\n  //     //     setError(\"\")\n  //     //     setLoading(true)\n  //     //     await loginuser(inputUsername, inputUserpass)\n  //     //     history.push(\"/userdashboard\")\n  //     //     } catch {\n  //     //     alert(\"Failed to log in\")\n  //     //     // alert(\"Enter Valid Username & Password !\")\n  //     //     }\n  //     //     setLoading(false)\n  //     // }\n  //     // async function handleSubmit(e) {\n  //     //     e.preventDefault()\n  //     //     try {\n  //     //     setError(\"\")\n  //     //     setLoading(true)\n  //     //     await login(userRef.current.value, passwordRef.current.value)\n  //     //     history.push(\"/\")\n  //     //     } catch {\n  //     //     setError(\"Failed to log in\")\n  //     //     }\n  //     //     setLoading(false)\n  //     // }\n  // //     const { register, handleSubmit, errors } = useForm({\n  // //     resolver: yupResolver(schema),\n  // //   });\n  // //     const onSubmit = (data) => {\n  // //         console.log(data);\n  // //     };\n\n\n  const checkOnlineStatus = async () => {\n    try {\n      const online = await fetch(\"/1pixel.png\");\n      return online.status >= 200 && online.status < 300; // either true or false\n    } catch (err) {\n      return false; // definitely offline\n    }\n  }; //   setInterval(async () => {\n  //   const result = await checkOnlineStatus();\n  //   const statusDisplay = document.getElementById(\"status\");\n  //   statusDisplay.textContent = result ? \"Online\" : \"OFFline\";\n  // }, 3000); // probably too often, try 30000 for every 30 seconds\n\n\n  window.addEventListener(\"load\", async event => {\n    const status = \"\";\n    status = (await checkOnlineStatus()) ? \"Online\" : \"OFFline\";\n    setError(status);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bgcolor row vh-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"part1 col-md-6 d-flex  justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/paylogo.svg\",\n          alt: \"logo\",\n          className: \"w-50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title fw-bold\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fw-light\",\n            children: \"ADCET \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 55\n          }, this), \" Paymentor\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"part2 col-md-6 bg-white br d-flex flex-column justify-content-start justify-content-md-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn login-btn btn-outline-primary rounded-pill\",\n          onClick: () => {\n            history.push('/adminlogin');\n          },\n          children: \"Admin Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"l-title\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"fw-bold mb-4 fs-3\",\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger \",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"d-flex flex-column align-items-center\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                class: \"form-control\",\n                name: \"username\",\n                id: \"username\",\n                placeholder: \"username\",\n                ref: emailRef,\n                onChange: e => setnewUsername(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group mb-5\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                class: \"form-control\",\n                name: \"password\",\n                id: \"password\",\n                placeholder: \"password\",\n                ref: passwordRef,\n                onChange: e => setnewPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"btn btn-primary px-4 py-2 w-100\",\n              type: \"button\",\n              value: \"Login\",\n              disabled: loading,\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 16\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"8TkghjmSLaXEn3yylTFSPuFvmOk=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["F:/MiniProject/New folder/paymentor/src/Components/Login.js"],"names":["React","useRef","useState","Link","useHistory","useAuth","firebase","Login","emailRef","passwordRef","login","error","setError","loading","setLoading","history","newUsername","setnewUsername","newPassword","setnewPassword","info","setinfo","handleSubmit","e","preventDefault","current","value","push","checkOnlineStatus","online","fetch","status","err","window","addEventListener","event","target"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\"\r\nimport '../index.css';\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport firebase from \"../backend/firebase\"\r\n\r\n// import {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\r\n// import { useForm } from \"react-hook-form\";\r\n// import { yupResolver } from \"@hookform/resolvers/yup\";\r\n// import * as yup from \"yup\";\r\n\r\n// const schema = yup.object().shape({\r\n//     username: yup.string().required(),\r\n//     password: yup.string().min(4).max(8).required()\r\n// })\r\n\r\nconst Login = () => {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const[newUsername,setnewUsername]=useState(\"\");\r\n    const[newPassword,setnewPassword]=useState(\"\");\r\n    const[info,setinfo]=useState([]);\r\n\r\n    // \r\n    \r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        await login(emailRef.current.value, passwordRef.current.value)\r\n        history.push(\"/userdashboard\")\r\n        } catch {\r\n        setError(\"Failed to log in\")\r\n        // alert(\"Enter Valid Username & Password !\")\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n\r\n//     const userRef = useRef()\r\n//     const passwordRef = useRef()\r\n//     // const { login } = useAuth()\r\n//     const [error, setError] = useState(\"\")\r\n//     const [loading, setLoading] = useState(false)\r\n//     const history = useHistory()\r\n\r\n//     const [users, setUsers] = useState([]);\r\n//     const userCollectionRef = collection(db ,\"User\");\r\n\r\n//     const [currentUsername, setcurrentUsername] = useState()\r\n//     const [currentUserpass, setcurrentUserpass] = useState()\r\n//     const [inputUsername, setinputUsername] = useState()\r\n//     const [inputUserpass, setinputUserpass] = useState()\r\n\r\n//     useEffect(() => {\r\n    \r\n//     const getUsers = async () => {\r\n//         const data = await getDocs(userCollectionRef)\r\n//         setUsers(data.docs.map((doc) => ({...doc.data(), id: doc.username})))\r\n//         }\r\n\r\n//         getUsers()\r\n//     }, [])\r\n//     // emailRef.current.value, passwordRef.current.value\r\n    \r\n//     const loginuser = () => {\r\n//         setcurrentUsername( users.find((user) => {\r\n//             return ( user.username  === inputUsername) \r\n//         }))\r\n\r\n//         setcurrentUserpass( users.find((user) => {\r\n//             return (user.password === inputUserpass) \r\n//         })\r\n//         )\r\n\r\n//         try {if (currentUsername.username == inputUsername) {\r\n//             history.push(\"/userdashboard\")\r\n//         } else {\r\n//             alert(\"Input Correct Details\")\r\n//         }} catch(err) {\r\n//             console.log(err);\r\n//         }\r\n//         console.log(currentUsername);\r\n//         console.log(inputUsername);\r\n        \r\n\r\n//     }\r\n\r\n//     // async function handleSubmit(e) {\r\n//     //     e.preventDefault()\r\n\r\n//     //     try {\r\n//     //     setError(\"\")\r\n//     //     setLoading(true)\r\n//     //     await loginuser(inputUsername, inputUserpass)\r\n//     //     history.push(\"/userdashboard\")\r\n//     //     } catch {\r\n//     //     alert(\"Failed to log in\")\r\n//     //     // alert(\"Enter Valid Username & Password !\")\r\n//     //     }\r\n\r\n//     //     setLoading(false)\r\n//     // }\r\n    \r\n\r\n\r\n//     // async function handleSubmit(e) {\r\n//     //     e.preventDefault()\r\n\r\n//     //     try {\r\n//     //     setError(\"\")\r\n//     //     setLoading(true)\r\n//     //     await login(userRef.current.value, passwordRef.current.value)\r\n//     //     history.push(\"/\")\r\n//     //     } catch {\r\n//     //     setError(\"Failed to log in\")\r\n//     //     }\r\n\r\n//     //     setLoading(false)\r\n//     // }\r\n\r\n\r\n// //     const { register, handleSubmit, errors } = useForm({\r\n// //     resolver: yupResolver(schema),\r\n// //   });\r\n\r\n// //     const onSubmit = (data) => {\r\n// //         console.log(data);\r\n// //     };\r\nconst checkOnlineStatus = async () => {\r\n    try {\r\n      const online = await fetch(\"/1pixel.png\");\r\n      return online.status >= 200 && online.status < 300; // either true or false\r\n    } catch (err) {\r\n      return false; // definitely offline\r\n    }\r\n  };\r\n//   setInterval(async () => {\r\n//   const result = await checkOnlineStatus();\r\n//   const statusDisplay = document.getElementById(\"status\");\r\n//   statusDisplay.textContent = result ? \"Online\" : \"OFFline\";\r\n// }, 3000); // probably too often, try 30000 for every 30 seconds\r\nwindow.addEventListener(\"load\", async (event) => {\r\n    const status = \"\"\r\n      status = (await checkOnlineStatus())\r\n      ? \"Online\"\r\n      : \"OFFline\";\r\n\r\n      setError(status)\r\n  });\r\n                        \r\n    return (\r\n        <>\r\n           {/* <div className=\"main vh-100\" style={{backgroundImage:\"url(./images/Background1.svg)\"}}> */}\r\n               \r\n               <div className=\"bgcolor row vh-100\">\r\n                \r\n                    <div className=\"part1 col-md-6 d-flex  justify-content-center align-items-center\">\r\n                        <img src=\"/paylogo.svg\" alt=\"logo\" className=\"w-50\" />\r\n                        <h1 className=\"title fw-bold\"><span className=\"fw-light\">ADCET </span> Paymentor</h1>\r\n                        \r\n                    </div>\r\n                    \r\n                    <div className=\"part2 col-md-6 bg-white br d-flex flex-column justify-content-start justify-content-md-center align-items-center\">\r\n                   \r\n                        \r\n                          <button type=\"button\" className=\"btn login-btn btn-outline-primary rounded-pill\" \r\n                          onClick={() => {history.push('/adminlogin')}} >Admin Login</button>\r\n                    \r\n                    \r\n                        <div className=\"form\">\r\n                                <div className=\"l-title\">\r\n                                    <h5 className=\"fw-bold mb-4 fs-3\">Log in</h5>\r\n                                </div>\r\n                                <div className=\"error\">\r\n                                    <p className=\"text-danger \">{error}</p>\r\n                                </div>\r\n                                {/* action=\"#\" method=\"post\" */}\r\n                                <form className=\"d-flex flex-column align-items-center\" onSubmit={handleSubmit}>\r\n                            \r\n                                        <div class=\"form-group mb-3\">\r\n                                            <input type=\"text\" class=\"form-control\" name=\"username\" id=\"username\" placeholder=\"username\" ref={emailRef} \r\n                                            onChange={e=> setnewUsername(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div class=\"form-group mb-5\">\r\n                                            <input type=\"password\" class=\"form-control\" name=\"password\" id=\"password\" placeholder=\"password\" ref={passwordRef}\r\n                                            onChange={e=> setnewPassword(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <input className=\"btn btn-primary px-4 py-2 w-100\" type=\"button\" value=\"Login\" disabled={loading} type=\"submit\"/>\r\n                                        {/* <button onClick={()=>Oncheck(newUsername,newPassword)} className=\"btn btn-primary px-4 py-2 w-100\" disabled={loading} type=\"submit\">Login</button>\r\n                                         */}\r\n                                </form>\r\n                        </div>\r\n                                \r\n\r\n                    </div>\r\n                   \r\n                    \r\n                    {/* <div className=\"container-lg flex-column d-flex align-items-center justify-content-center bg-white shadow br part2\">\r\n                       \r\n\r\n                            <div className=\"align-items-end w-50\">\r\n                            <h5 className=\"fw-bold mb-3 fs-3 align-self-start\">Log in</h5>\r\n                                <form className=\"d-flex flex-column align-items-center\" action=\"#\" method=\"post\">\r\n                                <div class=\"form-floating mb-3\">\r\n                                    <input type=\"text\" class=\"form-control\" name=\"username\" id=\"username\" placeholder=\"username\" />\r\n                                    <label for=\"username\">Username</label>\r\n                                </div>\r\n                                <div class=\"form-floating mb-5\">\r\n                                    <input type=\"password\" class=\"form-control\" name=\"password\" id=\"password\" placeholder=\"password\"/>\r\n                                    <label for=\"password\">Password</label>\r\n\r\n                                </div>\r\n                                <input className=\"btn btn-primary px-4 py-2\" type=\"button\" value=\"Login\" />\r\n                                </form>\r\n                                \r\n\r\n                            </div>\r\n                    </div> */}\r\n\r\n                </div>\r\n                    \r\n                    \r\n            {/* </div> */}\r\n\r\n                \r\n\r\n           \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}